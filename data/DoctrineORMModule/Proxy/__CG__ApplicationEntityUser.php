<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Application\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * {@inheritDoc}
     * @return array
     */
    public function __sleep()
    {
        $properties = array_merge(['__isInitialized__'], parent::__sleep());

        if ($this->__isInitialized__) {
            $properties = array_diff($properties, array_keys($this->__getLazyProperties()));
        }

        return $properties;
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullName($full_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullName', [$full_name]);

        return parent::setFullName($full_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated($date_created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', [$date_created]);

        return parent::setDateCreated($date_created);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', []);

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setPwdResetToken($pwd_reset_token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPwdResetToken', [$pwd_reset_token]);

        return parent::setPwdResetToken($pwd_reset_token);
    }

    /**
     * {@inheritDoc}
     */
    public function getPwdResetToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwdResetToken', []);

        return parent::getPwdResetToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setPwdResetTokenCreationDate($pwd_reset_token_creation_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPwdResetTokenCreationDate', [$pwd_reset_token_creation_date]);

        return parent::setPwdResetTokenCreationDate($pwd_reset_token_creation_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPwdResetTokenCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwdResetTokenCreationDate', []);

        return parent::getPwdResetTokenCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUmisteni($umisteni)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUmisteni', [$umisteni]);

        return parent::setUmisteni($umisteni);
    }

    /**
     * {@inheritDoc}
     */
    public function getUmisteni()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUmisteni', []);

        return parent::getUmisteni();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelefon($telefon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelefon', [$telefon]);

        return parent::setTelefon($telefon);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelefon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelefon', []);

        return parent::getTelefon();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastOnline($last_online)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastOnline', [$last_online]);

        return parent::setLastOnline($last_online);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastOnline', []);

        return parent::getLastOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlert(\Application\Entity\Alert $alert = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlert', [$alert]);

        return parent::setAlert($alert);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlert()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlert', []);

        return parent::getAlert();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnline(\Application\Entity\Online $online = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnline', [$online]);

        return parent::setOnline($online);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnline', []);

        return parent::getOnline();
    }

    /**
     * {@inheritDoc}
     */
    public function setSetting(\Application\Entity\Setting $setting = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSetting', [$setting]);

        return parent::setSetting($setting);
    }

    /**
     * {@inheritDoc}
     */
    public function getSetting()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSetting', []);

        return parent::getSetting();
    }

    /**
     * {@inheritDoc}
     */
    public function addUserRole(\Application\Entity\UserRole $userRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserRole', [$userRole]);

        return parent::addUserRole($userRole);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserRole(\Application\Entity\UserRole $userRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserRole', [$userRole]);

        return parent::removeUserRole($userRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserRoles', []);

        return parent::getUserRoles();
    }

}
